@using echeckBlazor.Data
@inject LDB ldb;
<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            @ContentText
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudGrid>
            <MudItem xs="12">

                <MudTextField @bind-Value="@newEquipment.Name" Label="设备名称" Variant="Variant.Text"
                    Margin="Margin.Normal" />
            </MudItem>
            <MudItem xs="12">
                <MudTextField @bind-Value="@newEquipment.Location" Label="设备位置" Variant="Variant.Text"
                    Margin="Margin.Normal" />

            </MudItem>
            <MudItem xs="8">
                <MudTextField @bind-Value="@newEquipment.Img" Label="设备图片url" Variant="Variant.Text"
                    Margin="Margin.Normal" />

            </MudItem>
            <MudItem xs="4">
                <MudFileUpload T="IBrowserFile" FilesChanged="UploadFiles" MaximumFileCount="1">
                    <ButtonTemplate>
                        <MudButton HtmlTag="label" Variant="Variant.Filled" Color="Color.Primary"
                            StartIcon="@Icons.Material.Filled.CloudUpload" for="@context">
                            上传
                        </MudButton>
                    </ButtonTemplate>
                </MudFileUpload>

            </MudItem>
            <MudItem xs="12">
                <MudTextField @bind-Value="@newEquipment.Description" Label="设备简介" Variant="Variant.Text"
                    Margin="Margin.Normal" Lines="5" />

            </MudItem>
        </MudGrid>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">取消</MudButton>
        <MudButton Color="@Color" OnClick="@((e) => Submit())">@ButtonText</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance? MudDialog { get; set; }
    [Parameter] public Equipment newEquipment { get; set; } = new Equipment();
    [Parameter] public string? ContentText { get; set; }

    [Parameter] public string? ButtonText { get; set; }

    [Parameter] public Color Color { get; set; }

    async Task Submit()
    {
        if (files.Count == 1)
        {
            Stream imageStream = new MemoryStream();
            await files[0].OpenReadStream(files[0].Size).CopyToAsync(imageStream);
            imageStream.Position = 0;
            ldb.ImageStorage.Upload(newEquipment.Name, files[0].Name, imageStream);
        }
        MudDialog?.Close(DialogResult.Ok(newEquipment));
    }
    void Cancel() => MudDialog?.Cancel();

    IList<IBrowserFile> files = new List<IBrowserFile>();
    private void UploadFiles(IBrowserFile file)
    {
        files.Clear();
        files.Add(file);
        newEquipment.Img = file.Name;
    }

}
